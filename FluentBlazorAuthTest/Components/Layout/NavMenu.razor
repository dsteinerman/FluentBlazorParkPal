@* To get access to all Fluent UI System icons, install the Microsoft.FluentUI.AspNetCore.Components.Icon package *@
@* See all the different ways on how to use icons at https://www.fluentui-blazor.net/Icon *@
@rendermode InteractiveServer

@implements IDisposable

@inject NavigationManager NavigationManager

<nav>
    <FluentNavMenu Width="250" Collapsible="true" Title="Custom navigation menu">
        <FluentNavLink Href="/" Match="NavLinkMatch.All" Icon="@(new Icons.Filled.Size20.Home())" IconColor="Color.Accent">Home</FluentNavLink>
        
        <FluentNavLink Href="/spaces/search" Match="NavLinkMatch.All" Icon="@(new Icons.Filled.Size20.VehicleCar())" IconColor="Color.Accent">Search Spaces</FluentNavLink>

        <FluentNavLink Href="/spaces/create" Match="NavLinkMatch.All" Icon="@(new Icons.Filled.Size20.AddCircle())" IconColor="Color.Accent">Create Spaces</FluentNavLink>

        <FluentNavLink Href="/Book" Match="NavLinkMatch.All" Icon="@(new Icons.Filled.Size20.BookmarkMultiple())" IconColor="Color.Accent">Your Bookings</FluentNavLink>
        
        <FluentNavLink Href="/Messages" Match="NavLinkMatch.All" Icon="@(new Icons.Filled.Size20.Chat())" IconColor="Color.Accent">Messages</FluentNavLink>
        
        <FluentNavLink Href="/Support" Match="NavLinkMatch.All" Icon="@(new Icons.Filled.Size20.PersonSupport())" IconColor="Color.Accent">Support</FluentNavLink>

        <FluentNavLink Href="/testimonials" Match="NavLinkMatch.All" Icon="@(new Icons.Regular.Size20.ChatMultipleHeart())" IconColor="Color.Accent">Testimonials</FluentNavLink>


        <FluentNavLink Href="/Settings" Match="NavLinkMatch.All" Icon="@(new Icons.Filled.Size20.ArchiveSettings())" IconColor="Color.Accent">Settings</FluentNavLink>

        <AuthorizeView>
            <Authorized>
                <FluentNavLink Href="Account/Manage" Icon="@(new Icons.Filled.Size20.ArrowExit())" IconColor="Color.Accent">@context.User.Identity?.Name</FluentNavLink>
                <form action="Account/Logout" method="post">
                    <AntiforgeryToken/>
                    <input type="hidden" name="ReturnUrl" value="@currentUrl"/>
                    <FluentButton Type="ButtonType.Submit" Style="width: 100%;">Logout</FluentButton>
                </form>
            </Authorized>
            <NotAuthorized>
                <FluentNavLink Href="Account/Register" Icon="@(new Icons.Filled.Size20.PersonAdd())" IconColor="Color.Accent">Register</FluentNavLink>
                <FluentNavLink Href="Account/Login" Icon="@(new Icons.Filled.Size20.ArrowEnter())" IconColor="Color.Accent">Login</FluentNavLink>
            </NotAuthorized>
        </AuthorizeView>
    </FluentNavMenu>
</nav>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

