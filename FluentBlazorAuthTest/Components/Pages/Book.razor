@page "/Book"

<link rel="stylesheet" href="/HTML/CSS/Styles.css" />
@using FluentBlazorAuthTest.Data
@using FluentBlazorAuthTest.Data.Services
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@attribute [Authorize]

@inject UserManager<ApplicationUser> UserManager
@inject IBookingService BookingService
@inject ISpaceService SpaceService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<PageTitle>My Bookings</PageTitle>

@if (bookings != null && bookings.Any())
{
    DisplaySections();
}
else
{
    <p><em>You don't have any bookings. Why not search for one?</em></p>
    <FluentButton Appearance="Appearance.Accent" @onclick="Search">Search</FluentButton>
}

@code {
    private IEnumerable<Booking> bookings;
    private Dictionary<string, Space> spaceDetailsForBookings = new Dictionary<string, Space>();
    private ApplicationUser currentUser;
    private ClaimsPrincipal user;

    protected override async Task OnInitializedAsync()
    {
        await InitializeUserAsync();
        await LoadDataAsync();
    }
    private async Task InitializeUserAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            var userId = UserManager.GetUserId(user);
            currentUser = await UserManager.FindByIdAsync(userId);
        }
    }
    private async Task LoadDataAsync()
    {
        bookings = await BookingService.GetAllBookingsAsync();
        spaceDetailsForBookings.Clear();

        foreach (var booking in bookings)
        {
            if (!spaceDetailsForBookings.ContainsKey(booking.SpaceId))
            {
                Space space = await SpaceService.GetSpaceByIdAsync(booking.SpaceId);
                if (space != null)
                {
                    spaceDetailsForBookings[booking.SpaceId] = space;
                }
            }
        }
    }

    void Search() => NavigationManager.NavigateTo("/spaces/search");
}
@{
    void DisplaySections()
    {
        DisplaySection("Current Bookings", bookings.Where(b => b.IsActive && b.EndDateTime > DateTime.Now && b.PaymentStatus != PaymentStatus.Unpaid));
        DisplaySection("Pending Bookings", bookings.Where(b => b.PaymentStatus == PaymentStatus.Unpaid));
        DisplaySection("Past Bookings", bookings.Where(b => b.EndDateTime <= DateTime.Now));
    }

    void DisplaySection(string title, IEnumerable<Booking> filteredBookings)
    {
        <div class="pagination-container">
            <h1>@title</h1>
        </div>
        <FluentDivider Role="DividerRole.Separator"></FluentDivider>

        if (filteredBookings.Any())
        {
            foreach (var booking in filteredBookings)
            {
                if (user.IsInRole("Admin") || booking.ClientUserId == currentUser.Id)
                {
                    <main class="bookings-page-content">
                        <section class="booking-management">
                            <div class="bookings-list">
                                <div class="booking-item">
                                    @if (spaceDetailsForBookings.TryGetValue(booking.SpaceId, out var space))
                                    {
                                        <h3 class="space-address">Address: @space.Address</h3>
                                    }
                                    <p class="booking-details">Booking Info: @booking</p> <!-- Replace with actual property -->
                                    <p class="booking-details">Total Price: @booking.Price.ToString("C")</p>
                                    <div class="booking-actions">
                                        <button class="modify-btn">Modify</button>
                                        <button class="cancel-btn">Cancel</button>
                                    </div>
                                </div>
                            </div>
                        </section>
                    </main>
                }
            }
        }
        else
        {
            <p><em>No bookings in this category.</em></p>
        }
    }
}
